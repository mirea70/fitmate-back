bootJar { enabled = false }
jar { enabled = true }

dependencies {
    // 모듈
    implementation project(':core')
    // util
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'
    // DB
    implementation 'com.oracle.database.jdbc:ojdbc10:19.18.0.0'
    implementation 'com.oracle.database.security:osdt_cert'
    implementation 'com.oracle.database.security:oraclepki'
    implementation 'com.oracle.database.security:osdt_core'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    // queryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def querydslSrcDir = 'src/main/generated'
sourceSets {
    main {
        java {
            srcDirs += [ querydslSrcDir ]
        }
    }
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

clean {
    delete file(querydslSrcDir)
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile
sourceSets {
    main {
        def resDir = "${profile}"==('prd') ? "/home/opc/resources" : "src/main/resources"
        resources {
            srcDirs resDir.toString()
        }
    }
}
